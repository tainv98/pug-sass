
$map-grid-props: ('': 0,
    '-sm': $grid__bp-sm,
    '-md': $grid__bp-md,
    '-lg': $grid__bp-lg,
    '-xl': $grid__bp-xl);

@mixin create-mq($breakpoint, $min-or-max) {
    @if($breakpoint==0) {
        @content;
    }

    @else {
        @media screen and (#{$min-or-max}-width: $breakpoint *1px) {
            @content;
        }
    }
}

@mixin create-col-classes($modifier, $grid-cols, $breakpoint) {
    @include create-mq($breakpoint, 'min') {
        @if($breakpoint==$grid__bp-sm) {
            max-width: 570 * 1px;
        }

        @if($breakpoint==$grid__bp-md) {
            max-width: 750 * 1px;
        }

        @if($breakpoint==$grid__bp-lg) {
            max-width: 990 * 1px;
        }

        @if($breakpoint==$grid__bp-xl) {
            max-width: 1170 * 1px;
        }

        &__col#{$modifier}-offset-0 {
            margin-left: 0;
        }

        @for $i from 1 through $grid-cols {
            &__col#{$modifier}-#{$i} {
                flex-basis: (100 / ($grid-cols / $i)) * 1%;
            }
            
            // &__col#{$modifier}-offset-#{$i} {
            //     margin-left: (100 / ($grid-cols / $i)) * 1%;
            // }
        }
    }
}

@each $modifier,
$breakpoint in $map-grid-props {
    @if($modifier=='') {
        $modifier: '-xs';
    }

    @include create-mq($breakpoint - 1, 'max') {
        .hidden#{$modifier}-down {
            display: none !important;
        }
    }

    @include create-mq($breakpoint, 'min') {
        .hidden#{$modifier}-up {
            display: none !important;
        }
    }
}

.container {
    width: 100%;
    @include paddingX(1.5rem);
    margin: 0 auto;

    &--fluid {
        margin: 0;
        max-width: 100%;
    }

    &__row {
        display: flex;
        flex-wrap: wrap;
        width: 100%;
    }
    
    @each $modifier,
    $breakpoint in $map-grid-props {
        @include create-col-classes($modifier, $grid__cols, $breakpoint);
    }
}